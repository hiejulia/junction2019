{"remainingRequest":"/Users/hien/Documents/junction/node_modules/thread-loader/dist/cjs.js??ref--4-2!/Users/hien/Documents/junction/node_modules/ts-loader/index.js??ref--4-3!/Users/hien/Documents/junction/node_modules/eslint-loader/index.js!/Users/hien/Documents/junction/src/main/webapp/app/modules/account/password-reset/init/password-reset-init.tsx","dependencies":[{"path":"/Users/hien/Documents/junction/src/main/webapp/app/modules/account/password-reset/init/password-reset-init.tsx","mtime":1573937052829},{"path":"/Users/hien/Documents/junction/node_modules/react-hot-loader/webpack.js","mtime":499162500000},{"path":"/Users/hien/Documents/junction/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hien/Documents/junction/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hien/Documents/junction/node_modules/ts-loader/index.js","mtime":1545640398000},{"path":"/Users/hien/Documents/junction/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { AvForm, AvField } from 'availity-reactstrap-validation';\nimport { Button, Alert, Col, Row } from 'reactstrap';\nimport { handlePasswordResetInit, reset } from '../password-reset.reducer';\nexport class PasswordResetInit extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.handleValidSubmit = (event, values) => {\n            this.props.handlePasswordResetInit(values.email);\n            event.preventDefault();\n        };\n    }\n    componentWillUnmount() {\n        this.props.reset();\n    }\n    render() {\n        return (React.createElement(\"div\", null,\n            React.createElement(Row, { className: \"justify-content-center\" },\n                React.createElement(Col, { md: \"8\" },\n                    React.createElement(\"h1\", null, \"Reset your password\"),\n                    React.createElement(Alert, { color: \"warning\" },\n                        React.createElement(\"p\", null, \"Enter the email address you used to register\")),\n                    React.createElement(AvForm, { onValidSubmit: this.handleValidSubmit },\n                        React.createElement(AvField, { name: \"email\", label: \"Email\", placeholder: 'Your email', type: \"email\", validate: {\n                                required: { value: true, errorMessage: 'Your email is required.' },\n                                minLength: { value: 5, errorMessage: 'Your email is required to be at least 5 characters.' },\n                                maxLength: { value: 254, errorMessage: 'Your email cannot be longer than 50 characters.' }\n                            } }),\n                        React.createElement(Button, { color: \"primary\", type: \"submit\" }, \"Reset password\"))))));\n    }\n}\nconst mapDispatchToProps = { handlePasswordResetInit, reset };\nexport default connect(null, mapDispatchToProps)(PasswordResetInit);\n",{"version":3,"file":"/Users/hien/Documents/junction/src/main/webapp/app/modules/account/password-reset/init/password-reset-init.tsx","sourceRoot":"","sources":["/Users/hien/Documents/junction/node_modules/eslint-loader/index.js!/Users/hien/Documents/junction/src/main/webapp/app/modules/account/password-reset/init/password-reset-init.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,OAAO,EAAE,OAAO,EAAE,MAAM,aAAa,CAAC;AACtC,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,gCAAgC,CAAC;AACjE,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM,YAAY,CAAC;AAGrD,OAAO,EAAE,uBAAuB,EAAE,KAAK,EAAE,MAAM,2BAA2B,CAAC;AAI3E,MAAM,OAAO,iBAAkB,SAAQ,KAAK,CAAC,SAAkC;IAA/E;;QAKE,sBAAiB,GAAG,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE;YACpC,IAAI,CAAC,KAAK,CAAC,uBAAuB,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YACjD,KAAK,CAAC,cAAc,EAAE,CAAC;QACzB,CAAC,CAAC;IAgCJ,CAAC;IAvCC,oBAAoB;QAClB,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;IACrB,CAAC;IAOD,MAAM;QACJ,OAAO,CACL;YACE,oBAAC,GAAG,IAAC,SAAS,EAAC,wBAAwB;gBACrC,oBAAC,GAAG,IAAC,EAAE,EAAC,GAAG;oBACT,sDAA4B;oBAC5B,oBAAC,KAAK,IAAC,KAAK,EAAC,SAAS;wBACpB,8EAAmD,CAC7C;oBACR,oBAAC,MAAM,IAAC,aAAa,EAAE,IAAI,CAAC,iBAAiB;wBAC3C,oBAAC,OAAO,IACN,IAAI,EAAC,OAAO,EACZ,KAAK,EAAC,OAAO,EACb,WAAW,EAAE,YAAY,EACzB,IAAI,EAAC,OAAO,EACZ,QAAQ,EAAE;gCACR,QAAQ,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,YAAY,EAAE,yBAAyB,EAAE;gCAClE,SAAS,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,YAAY,EAAE,qDAAqD,EAAE;gCAC5F,SAAS,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,YAAY,EAAE,iDAAiD,EAAE;6BAC3F,GACD;wBACF,oBAAC,MAAM,IAAC,KAAK,EAAC,SAAS,EAAC,IAAI,EAAC,QAAQ,qBAE5B,CACF,CACL,CACF,CACF,CACP,CAAC;IACJ,CAAC;CACF;AAED,MAAM,kBAAkB,GAAG,EAAE,uBAAuB,EAAE,KAAK,EAAE,CAAC;AAI9D,eAAe,OAAO,CACpB,IAAI,EACJ,kBAAkB,CACnB,CAAC,iBAAiB,CAAC,CAAC","sourcesContent":["import React from 'react';\n\nimport { connect } from 'react-redux';\nimport { AvForm, AvField } from 'availity-reactstrap-validation';\nimport { Button, Alert, Col, Row } from 'reactstrap';\n\nimport { IRootState } from 'app/shared/reducers';\nimport { handlePasswordResetInit, reset } from '../password-reset.reducer';\n\nexport type IPasswordResetInitProps = DispatchProps;\n\nexport class PasswordResetInit extends React.Component<IPasswordResetInitProps> {\n  componentWillUnmount() {\n    this.props.reset();\n  }\n\n  handleValidSubmit = (event, values) => {\n    this.props.handlePasswordResetInit(values.email);\n    event.preventDefault();\n  };\n\n  render() {\n    return (\n      <div>\n        <Row className=\"justify-content-center\">\n          <Col md=\"8\">\n            <h1>Reset your password</h1>\n            <Alert color=\"warning\">\n              <p>Enter the email address you used to register</p>\n            </Alert>\n            <AvForm onValidSubmit={this.handleValidSubmit}>\n              <AvField\n                name=\"email\"\n                label=\"Email\"\n                placeholder={'Your email'}\n                type=\"email\"\n                validate={{\n                  required: { value: true, errorMessage: 'Your email is required.' },\n                  minLength: { value: 5, errorMessage: 'Your email is required to be at least 5 characters.' },\n                  maxLength: { value: 254, errorMessage: 'Your email cannot be longer than 50 characters.' }\n                }}\n              />\n              <Button color=\"primary\" type=\"submit\">\n                Reset password\n              </Button>\n            </AvForm>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = { handlePasswordResetInit, reset };\n\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(PasswordResetInit);\n"]}]}