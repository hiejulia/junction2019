{"remainingRequest":"/Users/hien/Documents/junction/node_modules/thread-loader/dist/cjs.js??ref--4-2!/Users/hien/Documents/junction/node_modules/ts-loader/index.js??ref--4-3!/Users/hien/Documents/junction/node_modules/eslint-loader/index.js!/Users/hien/Documents/junction/src/main/webapp/app/entities/therapist/therapist.tsx","dependencies":[{"path":"/Users/hien/Documents/junction/src/main/webapp/app/entities/therapist/therapist.tsx","mtime":1573971106876},{"path":"/Users/hien/Documents/junction/node_modules/react-hot-loader/webpack.js","mtime":499162500000},{"path":"/Users/hien/Documents/junction/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hien/Documents/junction/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hien/Documents/junction/node_modules/ts-loader/index.js","mtime":1545640398000},{"path":"/Users/hien/Documents/junction/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Button, Table } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { getEntities } from './therapist.reducer';\nexport class Therapist extends React.Component {\n    componentDidMount() {\n        this.props.getEntities();\n    }\n    render() {\n        const { therapistList, match } = this.props;\n        return (React.createElement(\"div\", null,\n            React.createElement(\"h2\", { id: \"therapist-heading\" }, \"Therapists\"),\n            React.createElement(\"div\", { className: \"table-responsive\" }, therapistList && therapistList.length > 0 ? (React.createElement(Table, { responsive: true, \"aria-describedby\": \"therapist-heading\" },\n                React.createElement(\"thead\", null,\n                    React.createElement(\"tr\", null,\n                        React.createElement(\"th\", null, \"ID\"),\n                        React.createElement(\"th\", null, \"Name\"),\n                        React.createElement(\"th\", null, \"Expertise\"),\n                        React.createElement(\"th\", null, \"User Id\"),\n                        React.createElement(\"th\", null))),\n                React.createElement(\"tbody\", null, therapistList.map((therapist, i) => (React.createElement(\"tr\", { key: `entity-${i}` },\n                    React.createElement(\"td\", null,\n                        React.createElement(Button, { tag: Link, to: `${match.url}/${therapist.id}`, color: \"link\", size: \"sm\" }, therapist.id)),\n                    React.createElement(\"td\", null, therapist.name),\n                    React.createElement(\"td\", null, therapist.expertise),\n                    React.createElement(\"td\", null, therapist.userId),\n                    React.createElement(\"td\", { className: \"text-right\" },\n                        React.createElement(\"div\", { className: \"btn-group flex-btn-group-container\" },\n                            React.createElement(Button, { tag: Link, to: `${match.url}/${therapist.id}`, color: \"info\", size: \"sm\" },\n                                React.createElement(FontAwesomeIcon, { icon: \"eye\" }),\n                                \" \",\n                                React.createElement(\"span\", { className: \"d-none d-md-inline\" }, \"View\")))))))))) : (React.createElement(\"div\", { className: \"alert alert-warning\" }, \"No Therapists found\")))));\n    }\n}\nconst mapStateToProps = ({ therapist }) => ({\n    therapistList: therapist.entities\n});\nconst mapDispatchToProps = {\n    getEntities\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Therapist);\n",{"version":3,"file":"/Users/hien/Documents/junction/src/main/webapp/app/entities/therapist/therapist.tsx","sourceRoot":"","sources":["/Users/hien/Documents/junction/node_modules/eslint-loader/index.js!/Users/hien/Documents/junction/src/main/webapp/app/entities/therapist/therapist.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,OAAO,EAAE,MAAM,aAAa,CAAC;AACtC,OAAO,EAAE,IAAI,EAAuB,MAAM,kBAAkB,CAAC;AAC7D,OAAO,EAAE,MAAM,EAAY,KAAK,EAAE,MAAM,YAAY,CAAC;AAErD,OAAO,EAAE,eAAe,EAAE,MAAM,gCAAgC,CAAC;AAGjE,OAAO,EAAE,WAAW,EAAE,MAAM,qBAAqB,CAAC;AAMlD,MAAM,OAAO,SAAU,SAAQ,KAAK,CAAC,SAA0B;IAC7D,iBAAiB;QACf,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;IAC3B,CAAC;IAED,MAAM;QACJ,MAAM,EAAE,aAAa,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAC5C,OAAO,CACL;YACE,4BAAI,EAAE,EAAC,mBAAmB,iBAAgB;YAC1C,6BAAK,SAAS,EAAC,kBAAkB,IAC9B,aAAa,IAAI,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAC3C,oBAAC,KAAK,IAAC,UAAU,4BAAkB,mBAAmB;gBACpD;oBACE;wBACE,qCAAW;wBACX,uCAAa;wBACb,4CAAkB;wBAClB,0CAAgB;wBAChB,+BAAM,CACH,CACC;gBACR,mCACG,aAAa,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC,CACnC,4BAAI,GAAG,EAAE,UAAU,CAAC,EAAE;oBACpB;wBACE,oBAAC,MAAM,IAAC,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,KAAK,CAAC,GAAG,IAAI,SAAS,CAAC,EAAE,EAAE,EAAE,KAAK,EAAC,MAAM,EAAC,IAAI,EAAC,IAAI,IAC1E,SAAS,CAAC,EAAE,CACN,CACN;oBACL,gCAAK,SAAS,CAAC,IAAI,CAAM;oBACzB,gCAAK,SAAS,CAAC,SAAS,CAAM;oBAC9B,gCAAK,SAAS,CAAC,MAAM,CAAM;oBAC3B,4BAAI,SAAS,EAAC,YAAY;wBACxB,6BAAK,SAAS,EAAC,oCAAoC;4BACjD,oBAAC,MAAM,IAAC,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,KAAK,CAAC,GAAG,IAAI,SAAS,CAAC,EAAE,EAAE,EAAE,KAAK,EAAC,MAAM,EAAC,IAAI,EAAC,IAAI;gCAC3E,oBAAC,eAAe,IAAC,IAAI,EAAC,KAAK,GAAG;;gCAAC,8BAAM,SAAS,EAAC,oBAAoB,WAAY,CACxE,CACL,CACH,CACF,CACN,CAAC,CACI,CACF,CACT,CAAC,CAAC,CAAC,CACF,6BAAK,SAAS,EAAC,qBAAqB,0BAA0B,CAC/D,CACG,CACF,CACP,CAAC;IACJ,CAAC;CACF;AAED,MAAM,eAAe,GAAG,CAAC,EAAE,SAAS,EAAc,EAAE,EAAE,CAAC,CAAC;IACtD,aAAa,EAAE,SAAS,CAAC,QAAQ;CAClC,CAAC,CAAC;AAEH,MAAM,kBAAkB,GAAG;IACzB,WAAW;CACZ,CAAC;AAKF,eAAe,OAAO,CACpB,eAAe,EACf,kBAAkB,CACnB,CAAC,SAAS,CAAC,CAAC","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport { Button, Col, Row, Table } from 'reactstrap';\nimport { ICrudGetAllAction } from 'react-jhipster';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { IRootState } from 'app/shared/reducers';\nimport { getEntities } from './therapist.reducer';\nimport { ITherapist } from 'app/shared/model/therapist.model';\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\n\nexport interface ITherapistProps extends StateProps, DispatchProps, RouteComponentProps<{ url: string }> {}\n\nexport class Therapist extends React.Component<ITherapistProps> {\n  componentDidMount() {\n    this.props.getEntities();\n  }\n\n  render() {\n    const { therapistList, match } = this.props;\n    return (\n      <div>\n        <h2 id=\"therapist-heading\">Therapists</h2>\n        <div className=\"table-responsive\">\n          {therapistList && therapistList.length > 0 ? (\n            <Table responsive aria-describedby=\"therapist-heading\">\n              <thead>\n                <tr>\n                  <th>ID</th>\n                  <th>Name</th>\n                  <th>Expertise</th>\n                  <th>User Id</th>\n                  <th />\n                </tr>\n              </thead>\n              <tbody>\n                {therapistList.map((therapist, i) => (\n                  <tr key={`entity-${i}`}>\n                    <td>\n                      <Button tag={Link} to={`${match.url}/${therapist.id}`} color=\"link\" size=\"sm\">\n                        {therapist.id}\n                      </Button>\n                    </td>\n                    <td>{therapist.name}</td>\n                    <td>{therapist.expertise}</td>\n                    <td>{therapist.userId}</td>\n                    <td className=\"text-right\">\n                      <div className=\"btn-group flex-btn-group-container\">\n                        <Button tag={Link} to={`${match.url}/${therapist.id}`} color=\"info\" size=\"sm\">\n                          <FontAwesomeIcon icon=\"eye\" /> <span className=\"d-none d-md-inline\">View</span>\n                        </Button>\n                      </div>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          ) : (\n            <div className=\"alert alert-warning\">No Therapists found</div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ therapist }: IRootState) => ({\n  therapistList: therapist.entities\n});\n\nconst mapDispatchToProps = {\n  getEntities\n};\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Therapist);\n"]}]}