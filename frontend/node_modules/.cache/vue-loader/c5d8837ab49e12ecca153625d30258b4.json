{"remainingRequest":"/Users/hien/Desktop/vue-argon-dashboard-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hien/Desktop/vue-argon-dashboard-master/src/lib/components/SpeechToText.vue?vue&type=style&index=0&lang=sass&","dependencies":[{"path":"/Users/hien/Desktop/vue-argon-dashboard-master/src/lib/components/SpeechToText.vue","mtime":1573926209033},{"path":"/Users/hien/Desktop/vue-argon-dashboard-master/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/hien/Desktop/vue-argon-dashboard-master/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/hien/Desktop/vue-argon-dashboard-master/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/hien/Desktop/vue-argon-dashboard-master/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hien/Desktop/vue-argon-dashboard-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hien/Desktop/vue-argon-dashboard-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@keyframes blind\n    0%\n        background-color: #dddddd\n        width: 45px\n        height: 45px\n    50%\n        background-color: white\n        width: 50px\n        height: 50px\n.speech-to-text\n    &__button-container\n        display: flex\n        justify-content: center\n        align-items: center\n        width: 50px\n        height: 50px\n    &__button\n        box-shadow: 1px 2px 3px\n        background-color: #FFFFFF\n        border-radius: 50px\n        width: 50px\n        height: 50px\n        display: flex\n        justify-content: center\n        align-items: center\n        cursor: pointer\n        &--speaking\n            animation-name: blind\n            animation-duration: 1.5s\n            animation-iteration-count: 1\n    &__stop\n        width: 16px\n",{"version":3,"sources":["SpeechToText.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SpeechToText.vue","sourceRoot":"src/lib/components","sourcesContent":["<template>\n    <div>\n        <div class=\"speech-to-text__button-container\">\n            <div @click=\"onClick()\" :class=\"{ 'speech-to-text__button--speaking': isSpeaking }\"\n                    class=\"speech-to-text__button\">\n                    <img v-if=\"!isSpeaking\" :src=\"micImage\">\n                    <img v-if=\"isSpeaking\"\n                        class=\"speech-to-text__stop\" :src=\"stopImage\">\n                </div>\n            </div>\n    </div>\n</template>\n\n<script>\nimport SpeechToText from '../services/speech-to-text';\n\n\nconst micImage = require('../../assets/mic.svg');\nconst stopImage = require('../../assets/stop.svg');\n/*\n// eslint-disable-next-line no-unused-vars\n// eslint-disable-next-line no-unused-vars\n*/\nexport default {\n    name: 'SpeechToText',\n    data() {\n        return {\n            isSpeaking: false,\n            speech: '',\n            speechService: {},\n            micImage,\n            stopImage,\n        };\n    },\n    methods: {\n        onClick() {\n            this.isSpeaking = true;\n            this.speechService.speak().subscribe(\n                (result) => {\n                    this.speech = result;\n                    this.$emit('speech', this.speech);\n                    this.isSpeaking = false;\n                    // console.log('Result', result);\n                },\n                (error) => {\n                    console.log('Error', error);\n                    this.isSpeaking = false;\n                },\n                () => {\n                    this.isSpeaking = false;\n                }\n            );\n            console.log('speechService started');\n        }\n    },\n    props: {\n        msg: String\n    },\n    created() {\n        this.speechService = new SpeechToText();\n    }\n};\n</script>\n\n<style lang=\"sass\">\n@keyframes blind\n    0%\n        background-color: #dddddd\n        width: 45px\n        height: 45px\n    50%\n        background-color: white\n        width: 50px\n        height: 50px\n.speech-to-text\n    &__button-container\n        display: flex\n        justify-content: center\n        align-items: center\n        width: 50px\n        height: 50px\n    &__button\n        box-shadow: 1px 2px 3px\n        background-color: #FFFFFF\n        border-radius: 50px\n        width: 50px\n        height: 50px\n        display: flex\n        justify-content: center\n        align-items: center\n        cursor: pointer\n        &--speaking\n            animation-name: blind\n            animation-duration: 1.5s\n            animation-iteration-count: 1\n    &__stop\n        width: 16px\n</style>"]}]}