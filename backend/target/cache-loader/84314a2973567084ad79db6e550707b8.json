{"remainingRequest":"/Users/hien/Documents/junction/node_modules/thread-loader/dist/cjs.js??ref--4-2!/Users/hien/Documents/junction/node_modules/ts-loader/index.js??ref--4-3!/Users/hien/Documents/junction/node_modules/eslint-loader/index.js!/Users/hien/Documents/junction/src/main/webapp/app/entities/face-image/face-image-update.tsx","dependencies":[{"path":"/Users/hien/Documents/junction/src/main/webapp/app/entities/face-image/face-image-update.tsx","mtime":1573974063668},{"path":"/Users/hien/Documents/junction/node_modules/react-hot-loader/webpack.js","mtime":499162500000},{"path":"/Users/hien/Documents/junction/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hien/Documents/junction/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hien/Documents/junction/node_modules/ts-loader/index.js","mtime":1545640398000},{"path":"/Users/hien/Documents/junction/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Button, Row, Col, Label } from 'reactstrap';\nimport { AvForm, AvGroup, AvInput, AvField } from 'availity-reactstrap-validation';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { getEntity, updateEntity, createEntity, reset } from './face-image.reducer';\nexport class FaceImageUpdate extends React.Component {\n    constructor(props) {\n        super(props);\n        this.saveEntity = (event, errors, values) => {\n            if (errors.length === 0) {\n                const { faceImageEntity } = this.props;\n                const entity = Object.assign({}, faceImageEntity, values);\n                if (this.state.isNew) {\n                    this.props.createEntity(entity);\n                }\n                else {\n                    this.props.updateEntity(entity);\n                }\n            }\n        };\n        this.handleClose = () => {\n            this.props.history.push('/face-image');\n        };\n        this.state = {\n            isNew: !this.props.match.params || !this.props.match.params.id\n        };\n    }\n    componentWillUpdate(nextProps, nextState) {\n        if (nextProps.updateSuccess !== this.props.updateSuccess && nextProps.updateSuccess) {\n            this.handleClose();\n        }\n    }\n    componentDidMount() {\n        if (this.state.isNew) {\n            this.props.reset();\n        }\n        else {\n            this.props.getEntity(this.props.match.params.id);\n        }\n    }\n    render() {\n        const { faceImageEntity, loading, updating } = this.props;\n        const { isNew } = this.state;\n        return (React.createElement(\"div\", null,\n            React.createElement(Row, { className: \"justify-content-center\" },\n                React.createElement(Col, { md: \"8\" },\n                    React.createElement(\"h2\", { id: \"junctionApp.faceImage.home.createOrEditLabel\" }, \"Create or edit a FaceImage\"))),\n            React.createElement(Row, { className: \"justify-content-center\" },\n                React.createElement(Col, { md: \"8\" }, loading ? (React.createElement(\"p\", null, \"Loading...\")) : (React.createElement(AvForm, { model: isNew ? {} : faceImageEntity, onSubmit: this.saveEntity },\n                    !isNew ? (React.createElement(AvGroup, null,\n                        React.createElement(Label, { for: \"face-image-id\" }, \"ID\"),\n                        React.createElement(AvInput, { id: \"face-image-id\", type: \"text\", className: \"form-control\", name: \"id\", required: true, readOnly: true }))) : null,\n                    React.createElement(AvGroup, null,\n                        React.createElement(Label, { id: \"emotionsLabel\", for: \"face-image-emotions\" }, \"Emotions\"),\n                        React.createElement(AvField, { id: \"face-image-emotions\", type: \"text\", name: \"emotions\" })),\n                    React.createElement(Button, { tag: Link, id: \"cancel-save\", to: \"/face-image\", replace: true, color: \"info\" },\n                        React.createElement(FontAwesomeIcon, { icon: \"arrow-left\" }),\n                        \"\\u00A0\",\n                        React.createElement(\"span\", { className: \"d-none d-md-inline\" }, \"Back\")),\n                    \"\\u00A0\",\n                    React.createElement(Button, { color: \"primary\", id: \"save-entity\", type: \"submit\", disabled: updating },\n                        React.createElement(FontAwesomeIcon, { icon: \"save\" }),\n                        \"\\u00A0 Save\")))))));\n    }\n}\nconst mapStateToProps = (storeState) => ({\n    faceImageEntity: storeState.faceImage.entity,\n    loading: storeState.faceImage.loading,\n    updating: storeState.faceImage.updating,\n    updateSuccess: storeState.faceImage.updateSuccess\n});\nconst mapDispatchToProps = {\n    getEntity,\n    updateEntity,\n    createEntity,\n    reset\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(FaceImageUpdate);\n",{"version":3,"file":"/Users/hien/Documents/junction/src/main/webapp/app/entities/face-image/face-image-update.tsx","sourceRoot":"","sources":["/Users/hien/Documents/junction/node_modules/eslint-loader/index.js!/Users/hien/Documents/junction/src/main/webapp/app/entities/face-image/face-image-update.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport { Button, Row, Col, Label } from 'reactstrap';\nimport { AvFeedback, AvForm, AvGroup, AvInput, AvField } from 'availity-reactstrap-validation';\nimport { ICrudGetAction, ICrudGetAllAction, ICrudPutAction } from 'react-jhipster';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { IRootState } from 'app/shared/reducers';\n\nimport { getEntity, updateEntity, createEntity, reset } from './face-image.reducer';\nimport { IFaceImage } from 'app/shared/model/face-image.model';\nimport { convertDateTimeFromServer, convertDateTimeToServer } from 'app/shared/util/date-utils';\nimport { mapIdList } from 'app/shared/util/entity-utils';\n\nexport interface IFaceImageUpdateProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\n\nexport interface IFaceImageUpdateState {\n  isNew: boolean;\n}\n\nexport class FaceImageUpdate extends React.Component<IFaceImageUpdateProps, IFaceImageUpdateState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isNew: !this.props.match.params || !this.props.match.params.id\n    };\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    if (nextProps.updateSuccess !== this.props.updateSuccess && nextProps.updateSuccess) {\n      this.handleClose();\n    }\n  }\n\n  componentDidMount() {\n    if (this.state.isNew) {\n      this.props.reset();\n    } else {\n      this.props.getEntity(this.props.match.params.id);\n    }\n  }\n\n  saveEntity = (event, errors, values) => {\n    if (errors.length === 0) {\n      const { faceImageEntity } = this.props;\n      const entity = {\n        ...faceImageEntity,\n        ...values\n      };\n\n      if (this.state.isNew) {\n        this.props.createEntity(entity);\n      } else {\n        this.props.updateEntity(entity);\n      }\n    }\n  };\n\n  handleClose = () => {\n    this.props.history.push('/face-image');\n  };\n\n  render() {\n    const { faceImageEntity, loading, updating } = this.props;\n    const { isNew } = this.state;\n\n    return (\n      <div>\n        <Row className=\"justify-content-center\">\n          <Col md=\"8\">\n            <h2 id=\"junctionApp.faceImage.home.createOrEditLabel\">Create or edit a FaceImage</h2>\n          </Col>\n        </Row>\n        <Row className=\"justify-content-center\">\n          <Col md=\"8\">\n            {loading ? (\n              <p>Loading...</p>\n            ) : (\n              <AvForm model={isNew ? {} : faceImageEntity} onSubmit={this.saveEntity}>\n                {!isNew ? (\n                  <AvGroup>\n                    <Label for=\"face-image-id\">ID</Label>\n                    <AvInput id=\"face-image-id\" type=\"text\" className=\"form-control\" name=\"id\" required readOnly />\n                  </AvGroup>\n                ) : null}\n                <AvGroup>\n                  <Label id=\"emotionsLabel\" for=\"face-image-emotions\">\n                    Emotions\n                  </Label>\n                  <AvField id=\"face-image-emotions\" type=\"text\" name=\"emotions\" />\n                </AvGroup>\n                <Button tag={Link} id=\"cancel-save\" to=\"/face-image\" replace color=\"info\">\n                  <FontAwesomeIcon icon=\"arrow-left\" />\n                  &nbsp;\n                  <span className=\"d-none d-md-inline\">Back</span>\n                </Button>\n                &nbsp;\n                <Button color=\"primary\" id=\"save-entity\" type=\"submit\" disabled={updating}>\n                  <FontAwesomeIcon icon=\"save\" />\n                  &nbsp; Save\n                </Button>\n              </AvForm>\n            )}\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (storeState: IRootState) => ({\n  faceImageEntity: storeState.faceImage.entity,\n  loading: storeState.faceImage.loading,\n  updating: storeState.faceImage.updating,\n  updateSuccess: storeState.faceImage.updateSuccess\n});\n\nconst mapDispatchToProps = {\n  getEntity,\n  updateEntity,\n  createEntity,\n  reset\n};\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FaceImageUpdate);\n"]}]}