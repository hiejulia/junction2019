{"remainingRequest":"/Users/hien/Desktop/vue-argon-dashboard-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hien/Desktop/vue-argon-dashboard-master/node_modules/vue-html5-camera/src/Camera.vue?vue&type=style&index=0&id=b3cef74e&scoped=true&lang=css&","dependencies":[{"path":"/Users/hien/Desktop/vue-argon-dashboard-master/node_modules/vue-html5-camera/src/Camera.vue","mtime":499162500000},{"path":"/Users/hien/Desktop/vue-argon-dashboard-master/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/hien/Desktop/vue-argon-dashboard-master/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/hien/Desktop/vue-argon-dashboard-master/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/hien/Desktop/vue-argon-dashboard-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hien/Desktop/vue-argon-dashboard-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#cameraCanvas {\n  display: none;\n}\n",{"version":3,"sources":["Camera.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwEA;AACA;AACA","file":"Camera.vue","sourceRoot":"node_modules/vue-html5-camera/src","sourcesContent":["<template>\n  <div>\n    <video playsinline ref=\"cameraVideo\" />\n    <canvas id=\"cameraCanvas\" ref=\"cameraCanvas\" aria-hidden=\"true\" />\n  </div>\n</template>\n\n<script>\nexport default {\n  data: () => {\n    return {\n      img: \"Hello\"\n    };\n  },\n  props: [\"width\", \"height\", \"facingMode\"],\n  mounted() {\n    this.updateFeed();\n  },\n  computed: {\n    everything() {\n      return this.width, this.height, this.facingMode;\n    }\n  },\n  watch: {\n    everything() {\n      this.updateFeed();\n    }\n  },\n  methods: {\n    updateFeed() {\n      const constraints = {\n        audio: false,\n        video: {\n          facingMode: this.facingMode || \"user\"\n        }\n      };\n      if (this.width) this.$refs.cameraVideo.style.width = this.width + \"px\";\n      if (this.height) this.$refs.cameraVideo.style.height = this.height + \"px\";\n      this.$refs.cameraVideo.setAttribute(\"autoplay\", \"\");\n      this.$refs.cameraVideo.setAttribute(\"muted\", \"\");\n      this.$refs.cameraVideo.setAttribute(\"playsinline\", \"\");\n      navigator.mediaDevices\n        .getUserMedia(constraints)\n        .then(mediaStream => {\n          this.$refs.cameraVideo.srcObject = mediaStream;\n          this.$refs.cameraVideo.addEventListener(\"loadedmetadata\", () => {\n            this.$refs.cameraVideo.play();\n          });\n        })\n        .catch(error => {\n          console.log(\"Error\", error);\n        });\n    },\n    click() {\n      this.$refs.cameraCanvas.width = this.$refs.cameraVideo.offsetWidth;\n      this.$refs.cameraCanvas.height = this.$refs.cameraVideo.offsetHeight;\n      this.$refs.cameraCanvas\n        .getContext(\"2d\")\n        .drawImage(\n          this.$refs.cameraVideo,\n          0,\n          0,\n          this.$refs.cameraCanvas.width,\n          this.$refs.cameraCanvas.height\n        );\n      return this.$refs.cameraCanvas.toDataURL();\n    }\n  }\n};\n</script>\n\n<style scoped>\n#cameraCanvas {\n  display: none;\n}\n</style>\n"]}]}