{"remainingRequest":"/Users/hien/Desktop/vue-argon-dashboard-master/node_modules/babel-loader/lib/index.js!/Users/hien/Desktop/vue-argon-dashboard-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/hien/Desktop/vue-argon-dashboard-master/src/utils/formParser.js","dependencies":[{"path":"/Users/hien/Desktop/vue-argon-dashboard-master/src/utils/formParser.js","mtime":1573867891445},{"path":"/Users/hien/Desktop/vue-argon-dashboard-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hien/Desktop/vue-argon-dashboard-master/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hien/Desktop/vue-argon-dashboard-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nexport default {\n  getStepsFromForm: function getStepsFromForm(formSelector, groupSelector, labelSelector, inputSelector, invalidMessageSelector, submitCallback, validateInput) {\n    this.formSelector = formSelector;\n    this.groupSelector = groupSelector;\n    this.labelSelector = labelSelector;\n    this.inputSelector = inputSelector;\n    this.invalidMessageSelector = invalidMessageSelector;\n    this.submitCallback = submitCallback;\n    this.validateInput = validateInput;\n    this.form = document.querySelector(formSelector);\n    this.groups = this.form.querySelectorAll(groupSelector);\n    this.groupId = null;\n    this.steps = [];\n    this.parseGroups();\n    this.steps[this.steps.length - 1].trigger = this.formSelector + '-submit';\n    this.steps.push({\n      id: this.formSelector + '-submit',\n      message: null,\n      callback: submitCallback\n    });\n    return this.steps;\n  },\n  parseGroups: function parseGroups() {\n    for (var i = 0; i < this.groups.length; i++) {\n      var label = this.groups[i].querySelector(this.labelSelector);\n      this.groupId = this.groups[i].id ? this.groups[i].id : this.formSelector + i;\n\n      if (this.steps[this.steps.length - 1] && !this.steps[this.steps.length - 1].trigger) {\n        this.steps[this.steps.length - 1].trigger = this.groupId;\n      }\n\n      this.steps.push({\n        id: this.groupId,\n        message: label ? label.innerHTML : null,\n        trigger: label.dataset.trigger ? label.dataset.trigger : false,\n        delay: label.dataset.delay ? label.dataset.delay : false,\n        duration: label.dataset.duration ? label.dataset.duration : false\n      });\n      var inputs = this.groups[i].querySelectorAll(this.inputSelector);\n\n      if (inputs.length) {\n        if (!this.steps[this.steps.length - 1].trigger) {\n          this.steps[this.steps.length - 1].trigger = this.groupId + '-input';\n        }\n\n        if (inputs[0].type === 'submit') {\n          continue;\n        }\n\n        if (inputs[0].type === 'radio') {\n          this.parseRadioInputs(inputs, i);\n        } else {\n          this.parseTextInput(inputs[0], i);\n        }\n      }\n    }\n  },\n  parseRadioInputs: function parseRadioInputs(inputs, i) {\n    var options = [];\n\n    var _this = this;\n\n    for (var r = 0; r < inputs.length; r++) {\n      options.push({\n        label: inputs[r].parentElement.textContent.trim(),\n        value: inputs[r].value,\n        name: inputs[r].name,\n        input: inputs[r],\n        trigger: inputs[r].dataset.trigger\n      });\n    }\n\n    this.steps.push({\n      id: this.groupId + '-input',\n      key: inputs[0].name,\n      options: options,\n      delay: 0,\n      duration: 0,\n      validate: function validate(userInput) {\n        return _this.validateInput(userInput);\n      },\n      invalidMessage: inputs[0].closest(_this.groupSelector).querySelector(_this.invalidMessageSelector) ? inputs[0].closest(_this.groupSelector).querySelector(_this.invalidMessageSelector).innerHTML : '',\n      callback: function callback(step, option) {\n        _this.setInputValue(option.input, option.value);\n      }\n    });\n  },\n  parseTextInput: function parseTextInput(input, i) {\n    var _this = this;\n\n    this.steps.push({\n      id: this.groupId + '-input',\n      userInput: true,\n      key: input.name,\n      delay: 0,\n      duration: 0,\n      validate: function validate(userInput) {\n        userInput.input = input;\n        return _this.validateInput(userInput);\n      },\n      invalidMessage: input.closest(_this.groupSelector).querySelector(_this.invalidMessageSelector).innerHTML,\n      callback: function callback(step, userInput) {\n        _this.setInputValue(input, userInput.value);\n      }\n    });\n  },\n  setInputValue: function setInputValue(inputNode, value) {\n    if (inputNode.type === 'radio') {\n      inputNode.checked = true;\n    } else {\n      inputNode.value = value;\n    }\n  }\n};",{"version":3,"sources":["/Users/hien/Desktop/vue-argon-dashboard-master/src/utils/formParser.js"],"names":["getStepsFromForm","formSelector","groupSelector","labelSelector","inputSelector","invalidMessageSelector","submitCallback","validateInput","form","document","querySelector","groups","querySelectorAll","groupId","steps","parseGroups","length","trigger","push","id","message","callback","i","label","innerHTML","dataset","delay","duration","inputs","type","parseRadioInputs","parseTextInput","options","_this","r","parentElement","textContent","trim","value","name","input","key","validate","userInput","invalidMessage","closest","step","option","setInputValue","inputNode","checked"],"mappings":"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","sourcesContent":["export default {\n\n    getStepsFromForm (formSelector, groupSelector, labelSelector, inputSelector, invalidMessageSelector, submitCallback, validateInput) {\n      this.formSelector = formSelector\n      this.groupSelector = groupSelector\n      this.labelSelector = labelSelector\n      this.inputSelector = inputSelector\n      this.invalidMessageSelector = invalidMessageSelector\n      this.submitCallback = submitCallback\n      this.validateInput = validateInput\n      this.form = document.querySelector(formSelector)\n      this.groups = this.form.querySelectorAll(groupSelector)\n  \n      this.groupId = null\n      this.steps = []\n      this.parseGroups()\n      this.steps[this.steps.length - 1].trigger = this.formSelector + '-submit'\n      this.steps.push({\n        id: this.formSelector + '-submit',\n        message: null,\n        callback: submitCallback\n      })\n      return this.steps\n    },\n  \n    parseGroups () {\n      for (var i = 0; i < this.groups.length; i++) {\n        var label = this.groups[i].querySelector(this.labelSelector)\n        this.groupId = this.groups[i].id ? this.groups[i].id : this.formSelector + i\n        if (this.steps[this.steps.length - 1] && !this.steps[this.steps.length - 1].trigger) {\n          this.steps[this.steps.length - 1].trigger = this.groupId\n        }\n        this.steps.push({\n          id: this.groupId,\n          message: label ? label.innerHTML : null,\n          trigger: label.dataset.trigger ? label.dataset.trigger : false,\n          delay: label.dataset.delay ? label.dataset.delay : false,\n          duration: label.dataset.duration ? label.dataset.duration : false\n        })\n        var inputs = this.groups[i].querySelectorAll(this.inputSelector)\n        if (inputs.length) {\n          if (!this.steps[this.steps.length - 1].trigger) {\n            this.steps[this.steps.length - 1].trigger = this.groupId + '-input'\n          }\n          if (inputs[0].type === 'submit') {\n            continue\n          }\n          if (inputs[0].type === 'radio') {\n            this.parseRadioInputs(inputs, i)\n          } else {\n            this.parseTextInput(inputs[0], i)\n          }\n        }\n      }\n    },\n  \n    parseRadioInputs (inputs, i) {\n      var options = []\n      var _this = this\n      for (var r = 0; r < inputs.length; r++) {\n        options.push({\n          label: inputs[r].parentElement.textContent.trim(),\n          value: inputs[r].value,\n          name: inputs[r].name,\n          input: inputs[r],\n          trigger: inputs[r].dataset.trigger\n        })\n      }\n      this.steps.push({\n        id: this.groupId + '-input',\n        key: inputs[0].name,\n        options: options,\n        delay: 0,\n        duration: 0,\n        validate: function (userInput) {\n          return _this.validateInput(userInput)\n        },\n        invalidMessage: inputs[0].closest(_this.groupSelector).querySelector(_this.invalidMessageSelector) ? inputs[0].closest(_this.groupSelector).querySelector(_this.invalidMessageSelector).innerHTML : '',\n        callback: function (step, option) {\n          _this.setInputValue(option.input, option.value)\n        }\n      })\n    },\n  \n    parseTextInput (input, i) {\n      var _this = this\n      this.steps.push({\n        id: this.groupId + '-input',\n        userInput: true,\n        key: input.name,\n        delay: 0,\n        duration: 0,\n        validate: function (userInput) {\n          userInput.input = input\n          return _this.validateInput(userInput)\n        },\n        invalidMessage: input.closest(_this.groupSelector).querySelector(_this.invalidMessageSelector).innerHTML,\n        callback: function (step, userInput) {\n          _this.setInputValue(input, userInput.value)\n        }\n      })\n    },\n  \n    setInputValue (inputNode, value) {\n      if (inputNode.type === 'radio') {\n        inputNode.checked = true\n      } else {\n        inputNode.value = value\n      }\n    }\n  \n  }\n  "]}]}