{"remainingRequest":"/Users/hien/Documents/junction/node_modules/thread-loader/dist/cjs.js??ref--4-2!/Users/hien/Documents/junction/node_modules/ts-loader/index.js??ref--4-3!/Users/hien/Documents/junction/node_modules/eslint-loader/index.js!/Users/hien/Documents/junction/src/main/webapp/app/entities/therapist/therapist.reducer.ts","dependencies":[{"path":"/Users/hien/Documents/junction/src/main/webapp/app/entities/therapist/therapist.reducer.ts","mtime":1573971106877},{"path":"/Users/hien/Documents/junction/node_modules/react-hot-loader/webpack.js","mtime":499162500000},{"path":"/Users/hien/Documents/junction/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hien/Documents/junction/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hien/Documents/junction/node_modules/ts-loader/index.js","mtime":1545640398000},{"path":"/Users/hien/Documents/junction/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import axios from 'axios';\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\nimport { defaultValue } from 'app/shared/model/therapist.model';\nexport const ACTION_TYPES = {\n    FETCH_THERAPIST_LIST: 'therapist/FETCH_THERAPIST_LIST',\n    FETCH_THERAPIST: 'therapist/FETCH_THERAPIST',\n    RESET: 'therapist/RESET'\n};\nconst initialState = {\n    loading: false,\n    errorMessage: null,\n    entities: [],\n    entity: defaultValue,\n    updating: false,\n    updateSuccess: false\n};\n// Reducer\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case REQUEST(ACTION_TYPES.FETCH_THERAPIST_LIST):\n        case REQUEST(ACTION_TYPES.FETCH_THERAPIST):\n            return Object.assign({}, state, { errorMessage: null, updateSuccess: false, loading: true });\n        case FAILURE(ACTION_TYPES.FETCH_THERAPIST_LIST):\n        case FAILURE(ACTION_TYPES.FETCH_THERAPIST):\n            return Object.assign({}, state, { loading: false, updating: false, updateSuccess: false, errorMessage: action.payload });\n        case SUCCESS(ACTION_TYPES.FETCH_THERAPIST_LIST):\n            return Object.assign({}, state, { loading: false, entities: action.payload.data });\n        case SUCCESS(ACTION_TYPES.FETCH_THERAPIST):\n            return Object.assign({}, state, { loading: false, entity: action.payload.data });\n        case ACTION_TYPES.RESET:\n            return Object.assign({}, initialState);\n        default:\n            return state;\n    }\n};\nconst apiUrl = 'api/therapists';\n// Actions\nexport const getEntities = (page, size, sort) => ({\n    type: ACTION_TYPES.FETCH_THERAPIST_LIST,\n    payload: axios.get(`${apiUrl}?cacheBuster=${new Date().getTime()}`)\n});\nexport const getEntity = id => {\n    const requestUrl = `${apiUrl}/${id}`;\n    return {\n        type: ACTION_TYPES.FETCH_THERAPIST,\n        payload: axios.get(requestUrl)\n    };\n};\nexport const reset = () => ({\n    type: ACTION_TYPES.RESET\n});\n",{"version":3,"file":"/Users/hien/Documents/junction/src/main/webapp/app/entities/therapist/therapist.reducer.ts","sourceRoot":"","sources":["/Users/hien/Documents/junction/node_modules/eslint-loader/index.js!/Users/hien/Documents/junction/src/main/webapp/app/entities/therapist/therapist.reducer.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAI1B,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,sCAAsC,CAAC;AAEjF,OAAO,EAAc,YAAY,EAAE,MAAM,kCAAkC,CAAC;AAE5E,MAAM,CAAC,MAAM,YAAY,GAAG;IAC1B,oBAAoB,EAAE,gCAAgC;IACtD,eAAe,EAAE,2BAA2B;IAC5C,KAAK,EAAE,iBAAiB;CACzB,CAAC;AAEF,MAAM,YAAY,GAAG;IACnB,OAAO,EAAE,KAAK;IACd,YAAY,EAAE,IAAI;IAClB,QAAQ,EAAE,EAA+B;IACzC,MAAM,EAAE,YAAY;IACpB,QAAQ,EAAE,KAAK;IACf,aAAa,EAAE,KAAK;CACrB,CAAC;AAIF,UAAU;AAEV,eAAe,CAAC,QAAwB,YAAY,EAAE,MAAM,EAAkB,EAAE;IAC9E,QAAQ,MAAM,CAAC,IAAI,EAAE;QACnB,KAAK,OAAO,CAAC,YAAY,CAAC,oBAAoB,CAAC,CAAC;QAChD,KAAK,OAAO,CAAC,YAAY,CAAC,eAAe,CAAC;YACxC,yBACK,KAAK,IACR,YAAY,EAAE,IAAI,EAClB,aAAa,EAAE,KAAK,EACpB,OAAO,EAAE,IAAI,IACb;QACJ,KAAK,OAAO,CAAC,YAAY,CAAC,oBAAoB,CAAC,CAAC;QAChD,KAAK,OAAO,CAAC,YAAY,CAAC,eAAe,CAAC;YACxC,yBACK,KAAK,IACR,OAAO,EAAE,KAAK,EACd,QAAQ,EAAE,KAAK,EACf,aAAa,EAAE,KAAK,EACpB,YAAY,EAAE,MAAM,CAAC,OAAO,IAC5B;QACJ,KAAK,OAAO,CAAC,YAAY,CAAC,oBAAoB,CAAC;YAC7C,yBACK,KAAK,IACR,OAAO,EAAE,KAAK,EACd,QAAQ,EAAE,MAAM,CAAC,OAAO,CAAC,IAAI,IAC7B;QACJ,KAAK,OAAO,CAAC,YAAY,CAAC,eAAe,CAAC;YACxC,yBACK,KAAK,IACR,OAAO,EAAE,KAAK,EACd,MAAM,EAAE,MAAM,CAAC,OAAO,CAAC,IAAI,IAC3B;QACJ,KAAK,YAAY,CAAC,KAAK;YACrB,yBACK,YAAY,EACf;QACJ;YACE,OAAO,KAAK,CAAC;KAChB;AACH,CAAC,CAAC;AAEF,MAAM,MAAM,GAAG,gBAAgB,CAAC;AAEhC,UAAU;AAEV,MAAM,CAAC,MAAM,WAAW,GAAkC,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;IAC/E,IAAI,EAAE,YAAY,CAAC,oBAAoB;IACvC,OAAO,EAAE,KAAK,CAAC,GAAG,CAAa,GAAG,MAAM,gBAAgB,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,EAAE,CAAC;CAChF,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,SAAS,GAA+B,EAAE,CAAC,EAAE;IACxD,MAAM,UAAU,GAAG,GAAG,MAAM,IAAI,EAAE,EAAE,CAAC;IACrC,OAAO;QACL,IAAI,EAAE,YAAY,CAAC,eAAe;QAClC,OAAO,EAAE,KAAK,CAAC,GAAG,CAAa,UAAU,CAAC;KAC3C,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,KAAK,GAAG,GAAG,EAAE,CAAC,CAAC;IAC1B,IAAI,EAAE,YAAY,CAAC,KAAK;CACzB,CAAC,CAAC","sourcesContent":["import axios from 'axios';\nimport { ICrudGetAction, ICrudGetAllAction, ICrudPutAction, ICrudDeleteAction } from 'react-jhipster';\n\nimport { cleanEntity } from 'app/shared/util/entity-utils';\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\n\nimport { ITherapist, defaultValue } from 'app/shared/model/therapist.model';\n\nexport const ACTION_TYPES = {\n  FETCH_THERAPIST_LIST: 'therapist/FETCH_THERAPIST_LIST',\n  FETCH_THERAPIST: 'therapist/FETCH_THERAPIST',\n  RESET: 'therapist/RESET'\n};\n\nconst initialState = {\n  loading: false,\n  errorMessage: null,\n  entities: [] as ReadonlyArray<ITherapist>,\n  entity: defaultValue,\n  updating: false,\n  updateSuccess: false\n};\n\nexport type TherapistState = Readonly<typeof initialState>;\n\n// Reducer\n\nexport default (state: TherapistState = initialState, action): TherapistState => {\n  switch (action.type) {\n    case REQUEST(ACTION_TYPES.FETCH_THERAPIST_LIST):\n    case REQUEST(ACTION_TYPES.FETCH_THERAPIST):\n      return {\n        ...state,\n        errorMessage: null,\n        updateSuccess: false,\n        loading: true\n      };\n    case FAILURE(ACTION_TYPES.FETCH_THERAPIST_LIST):\n    case FAILURE(ACTION_TYPES.FETCH_THERAPIST):\n      return {\n        ...state,\n        loading: false,\n        updating: false,\n        updateSuccess: false,\n        errorMessage: action.payload\n      };\n    case SUCCESS(ACTION_TYPES.FETCH_THERAPIST_LIST):\n      return {\n        ...state,\n        loading: false,\n        entities: action.payload.data\n      };\n    case SUCCESS(ACTION_TYPES.FETCH_THERAPIST):\n      return {\n        ...state,\n        loading: false,\n        entity: action.payload.data\n      };\n    case ACTION_TYPES.RESET:\n      return {\n        ...initialState\n      };\n    default:\n      return state;\n  }\n};\n\nconst apiUrl = 'api/therapists';\n\n// Actions\n\nexport const getEntities: ICrudGetAllAction<ITherapist> = (page, size, sort) => ({\n  type: ACTION_TYPES.FETCH_THERAPIST_LIST,\n  payload: axios.get<ITherapist>(`${apiUrl}?cacheBuster=${new Date().getTime()}`)\n});\n\nexport const getEntity: ICrudGetAction<ITherapist> = id => {\n  const requestUrl = `${apiUrl}/${id}`;\n  return {\n    type: ACTION_TYPES.FETCH_THERAPIST,\n    payload: axios.get<ITherapist>(requestUrl)\n  };\n};\n\nexport const reset = () => ({\n  type: ACTION_TYPES.RESET\n});\n"]}]}