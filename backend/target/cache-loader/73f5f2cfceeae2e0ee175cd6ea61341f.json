{"remainingRequest":"/Users/hien/Documents/junction/node_modules/thread-loader/dist/cjs.js??ref--4-2!/Users/hien/Documents/junction/node_modules/ts-loader/index.js??ref--4-3!/Users/hien/Documents/junction/node_modules/eslint-loader/index.js!/Users/hien/Documents/junction/src/main/webapp/app/modules/account/password-reset/password-reset.reducer.ts","dependencies":[{"path":"/Users/hien/Documents/junction/src/main/webapp/app/modules/account/password-reset/password-reset.reducer.ts","mtime":1573937052943},{"path":"/Users/hien/Documents/junction/node_modules/react-hot-loader/webpack.js","mtime":499162500000},{"path":"/Users/hien/Documents/junction/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hien/Documents/junction/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hien/Documents/junction/node_modules/ts-loader/index.js","mtime":1545640398000},{"path":"/Users/hien/Documents/junction/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import axios from 'axios';\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\nexport const ACTION_TYPES = {\n    RESET_PASSWORD_INIT: 'passwordReset/RESET_PASSWORD_INIT',\n    RESET_PASSWORD_FINISH: 'passwordReset/RESET_PASSWORD_FINISH',\n    RESET: 'passwordReset/RESET'\n};\nconst initialState = {\n    loading: false,\n    resetPasswordSuccess: false,\n    resetPasswordFailure: false\n};\n// Reducer\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case REQUEST(ACTION_TYPES.RESET_PASSWORD_FINISH):\n        case REQUEST(ACTION_TYPES.RESET_PASSWORD_INIT):\n            return Object.assign({}, state, { loading: true });\n        case FAILURE(ACTION_TYPES.RESET_PASSWORD_FINISH):\n        case FAILURE(ACTION_TYPES.RESET_PASSWORD_INIT):\n            return Object.assign({}, initialState, { loading: false, resetPasswordFailure: true });\n        case SUCCESS(ACTION_TYPES.RESET_PASSWORD_FINISH):\n        case SUCCESS(ACTION_TYPES.RESET_PASSWORD_INIT):\n            return Object.assign({}, initialState, { loading: false, resetPasswordSuccess: true });\n        case ACTION_TYPES.RESET:\n            return Object.assign({}, initialState);\n        default:\n            return state;\n    }\n};\nconst apiUrl = 'api/account/reset-password';\n// Actions\nexport const handlePasswordResetInit = mail => ({\n    type: ACTION_TYPES.RESET_PASSWORD_INIT,\n    // If the content-type isn't set that way, axios will try to encode the body and thus modify the data sent to the server.\n    payload: axios.post(`${apiUrl}/init`, mail, { headers: { ['Content-Type']: 'text/plain' } }),\n    meta: {\n        successMessage: 'Check your emails for details on how to reset your password.',\n        errorMessage: \"<strong>Email address isn't registered!</strong> Please check and try again\"\n    }\n});\nexport const handlePasswordResetFinish = (key, newPassword) => ({\n    type: ACTION_TYPES.RESET_PASSWORD_FINISH,\n    payload: axios.post(`${apiUrl}/finish`, { key, newPassword }),\n    meta: {\n        successMessage: '<strong>Your password has been reset.</strong> Please '\n    }\n});\nexport const reset = () => ({\n    type: ACTION_TYPES.RESET\n});\n",{"version":3,"file":"/Users/hien/Documents/junction/src/main/webapp/app/modules/account/password-reset/password-reset.reducer.ts","sourceRoot":"","sources":["/Users/hien/Documents/junction/node_modules/eslint-loader/index.js!/Users/hien/Documents/junction/src/main/webapp/app/modules/account/password-reset/password-reset.reducer.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,sCAAsC,CAAC;AAEjF,MAAM,CAAC,MAAM,YAAY,GAAG;IAC1B,mBAAmB,EAAE,mCAAmC;IACxD,qBAAqB,EAAE,qCAAqC;IAC5D,KAAK,EAAE,qBAAqB;CAC7B,CAAC;AAEF,MAAM,YAAY,GAAG;IACnB,OAAO,EAAE,KAAK;IACd,oBAAoB,EAAE,KAAK;IAC3B,oBAAoB,EAAE,KAAK;CAC5B,CAAC;AAIF,UAAU;AACV,eAAe,CAAC,QAA4B,YAAY,EAAE,MAAM,EAAsB,EAAE;IACtF,QAAQ,MAAM,CAAC,IAAI,EAAE;QACnB,KAAK,OAAO,CAAC,YAAY,CAAC,qBAAqB,CAAC,CAAC;QACjD,KAAK,OAAO,CAAC,YAAY,CAAC,mBAAmB,CAAC;YAC5C,yBACK,KAAK,IACR,OAAO,EAAE,IAAI,IACb;QACJ,KAAK,OAAO,CAAC,YAAY,CAAC,qBAAqB,CAAC,CAAC;QACjD,KAAK,OAAO,CAAC,YAAY,CAAC,mBAAmB,CAAC;YAC5C,yBACK,YAAY,IACf,OAAO,EAAE,KAAK,EACd,oBAAoB,EAAE,IAAI,IAC1B;QACJ,KAAK,OAAO,CAAC,YAAY,CAAC,qBAAqB,CAAC,CAAC;QACjD,KAAK,OAAO,CAAC,YAAY,CAAC,mBAAmB,CAAC;YAC5C,yBACK,YAAY,IACf,OAAO,EAAE,KAAK,EACd,oBAAoB,EAAE,IAAI,IAC1B;QACJ,KAAK,YAAY,CAAC,KAAK;YACrB,yBACK,YAAY,EACf;QACJ;YACE,OAAO,KAAK,CAAC;KAChB;AACH,CAAC,CAAC;AAEF,MAAM,MAAM,GAAG,4BAA4B,CAAC;AAE5C,UAAU;AACV,MAAM,CAAC,MAAM,uBAAuB,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;IAC9C,IAAI,EAAE,YAAY,CAAC,mBAAmB;IACtC,yHAAyH;IACzH,OAAO,EAAE,KAAK,CAAC,IAAI,CAAC,GAAG,MAAM,OAAO,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,EAAE,CAAC,cAAc,CAAC,EAAE,YAAY,EAAE,EAAE,CAAC;IAC5F,IAAI,EAAE;QACJ,cAAc,EAAE,8DAA8D;QAC9E,YAAY,EAAE,6EAA6E;KAC5F;CACF,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,yBAAyB,GAAG,CAAC,GAAG,EAAE,WAAW,EAAE,EAAE,CAAC,CAAC;IAC9D,IAAI,EAAE,YAAY,CAAC,qBAAqB;IACxC,OAAO,EAAE,KAAK,CAAC,IAAI,CAAC,GAAG,MAAM,SAAS,EAAE,EAAE,GAAG,EAAE,WAAW,EAAE,CAAC;IAC7D,IAAI,EAAE;QACJ,cAAc,EAAE,wDAAwD;KACzE;CACF,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,KAAK,GAAG,GAAG,EAAE,CAAC,CAAC;IAC1B,IAAI,EAAE,YAAY,CAAC,KAAK;CACzB,CAAC,CAAC","sourcesContent":["import axios from 'axios';\n\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\n\nexport const ACTION_TYPES = {\n  RESET_PASSWORD_INIT: 'passwordReset/RESET_PASSWORD_INIT',\n  RESET_PASSWORD_FINISH: 'passwordReset/RESET_PASSWORD_FINISH',\n  RESET: 'passwordReset/RESET'\n};\n\nconst initialState = {\n  loading: false,\n  resetPasswordSuccess: false,\n  resetPasswordFailure: false\n};\n\nexport type PasswordResetState = Readonly<typeof initialState>;\n\n// Reducer\nexport default (state: PasswordResetState = initialState, action): PasswordResetState => {\n  switch (action.type) {\n    case REQUEST(ACTION_TYPES.RESET_PASSWORD_FINISH):\n    case REQUEST(ACTION_TYPES.RESET_PASSWORD_INIT):\n      return {\n        ...state,\n        loading: true\n      };\n    case FAILURE(ACTION_TYPES.RESET_PASSWORD_FINISH):\n    case FAILURE(ACTION_TYPES.RESET_PASSWORD_INIT):\n      return {\n        ...initialState,\n        loading: false,\n        resetPasswordFailure: true\n      };\n    case SUCCESS(ACTION_TYPES.RESET_PASSWORD_FINISH):\n    case SUCCESS(ACTION_TYPES.RESET_PASSWORD_INIT):\n      return {\n        ...initialState,\n        loading: false,\n        resetPasswordSuccess: true\n      };\n    case ACTION_TYPES.RESET:\n      return {\n        ...initialState\n      };\n    default:\n      return state;\n  }\n};\n\nconst apiUrl = 'api/account/reset-password';\n\n// Actions\nexport const handlePasswordResetInit = mail => ({\n  type: ACTION_TYPES.RESET_PASSWORD_INIT,\n  // If the content-type isn't set that way, axios will try to encode the body and thus modify the data sent to the server.\n  payload: axios.post(`${apiUrl}/init`, mail, { headers: { ['Content-Type']: 'text/plain' } }),\n  meta: {\n    successMessage: 'Check your emails for details on how to reset your password.',\n    errorMessage: \"<strong>Email address isn't registered!</strong> Please check and try again\"\n  }\n});\n\nexport const handlePasswordResetFinish = (key, newPassword) => ({\n  type: ACTION_TYPES.RESET_PASSWORD_FINISH,\n  payload: axios.post(`${apiUrl}/finish`, { key, newPassword }),\n  meta: {\n    successMessage: '<strong>Your password has been reset.</strong> Please '\n  }\n});\n\nexport const reset = () => ({\n  type: ACTION_TYPES.RESET\n});\n"]}]}