{"remainingRequest":"/Users/hien/Documents/junction/node_modules/thread-loader/dist/cjs.js??ref--4-2!/Users/hien/Documents/junction/node_modules/ts-loader/index.js??ref--4-3!/Users/hien/Documents/junction/node_modules/eslint-loader/index.js!/Users/hien/Documents/junction/src/main/webapp/app/entities/diary/diary-detail.tsx","dependencies":[{"path":"/Users/hien/Documents/junction/src/main/webapp/app/entities/diary/diary-detail.tsx","mtime":1573937763251},{"path":"/Users/hien/Documents/junction/node_modules/react-hot-loader/webpack.js","mtime":499162500000},{"path":"/Users/hien/Documents/junction/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hien/Documents/junction/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hien/Documents/junction/node_modules/ts-loader/index.js","mtime":1545640398000},{"path":"/Users/hien/Documents/junction/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Button, Row, Col } from 'reactstrap';\nimport { TextFormat } from 'react-jhipster';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { getEntity } from './diary.reducer';\nimport { APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\nexport class DiaryDetail extends React.Component {\n    componentDidMount() {\n        this.props.getEntity(this.props.match.params.id);\n    }\n    render() {\n        const { diaryEntity } = this.props;\n        return (React.createElement(Row, null,\n            React.createElement(Col, { md: \"8\" },\n                React.createElement(\"h2\", null,\n                    \"Diary [\",\n                    React.createElement(\"b\", null, diaryEntity.id),\n                    \"]\"),\n                React.createElement(\"dl\", { className: \"jh-entity-details\" },\n                    React.createElement(\"dt\", null,\n                        React.createElement(\"span\", { id: \"content\" }, \"Content\")),\n                    React.createElement(\"dd\", null, diaryEntity.content),\n                    React.createElement(\"dt\", null,\n                        React.createElement(\"span\", { id: \"createdAt\" }, \"Created At\")),\n                    React.createElement(\"dd\", null,\n                        React.createElement(TextFormat, { value: diaryEntity.createdAt, type: \"date\", format: APP_LOCAL_DATE_FORMAT })),\n                    React.createElement(\"dt\", null,\n                        React.createElement(\"span\", { id: \"userId\" }, \"User Id\")),\n                    React.createElement(\"dd\", null, diaryEntity.userId),\n                    React.createElement(\"dt\", null,\n                        React.createElement(\"span\", { id: \"n\" }, \"N\")),\n                    React.createElement(\"dd\", null, diaryEntity.n)),\n                React.createElement(Button, { tag: Link, to: \"/diary\", replace: true, color: \"info\" },\n                    React.createElement(FontAwesomeIcon, { icon: \"arrow-left\" }),\n                    \" \",\n                    React.createElement(\"span\", { className: \"d-none d-md-inline\" }, \"Back\")),\n                \"\\u00A0\",\n                React.createElement(Button, { tag: Link, to: `/diary/${diaryEntity.id}/edit`, replace: true, color: \"primary\" },\n                    React.createElement(FontAwesomeIcon, { icon: \"pencil-alt\" }),\n                    \" \",\n                    React.createElement(\"span\", { className: \"d-none d-md-inline\" }, \"Edit\")))));\n    }\n}\nconst mapStateToProps = ({ diary }) => ({\n    diaryEntity: diary.entity\n});\nconst mapDispatchToProps = { getEntity };\nexport default connect(mapStateToProps, mapDispatchToProps)(DiaryDetail);\n",{"version":3,"file":"/Users/hien/Documents/junction/src/main/webapp/app/entities/diary/diary-detail.tsx","sourceRoot":"","sources":["/Users/hien/Documents/junction/node_modules/eslint-loader/index.js!/Users/hien/Documents/junction/src/main/webapp/app/entities/diary/diary-detail.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,OAAO,EAAE,MAAM,aAAa,CAAC;AACtC,OAAO,EAAE,IAAI,EAAuB,MAAM,kBAAkB,CAAC;AAC7D,OAAO,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM,YAAY,CAAC;AAC9C,OAAO,EAAkB,UAAU,EAAE,MAAM,gBAAgB,CAAC;AAC5D,OAAO,EAAE,eAAe,EAAE,MAAM,gCAAgC,CAAC;AAGjE,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAE5C,OAAO,EAAmB,qBAAqB,EAAE,MAAM,sBAAsB,CAAC;AAI9E,MAAM,OAAO,WAAY,SAAQ,KAAK,CAAC,SAA4B;IACjE,iBAAiB;QACf,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;IACnD,CAAC;IAED,MAAM;QACJ,MAAM,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QACnC,OAAO,CACL,oBAAC,GAAG;YACF,oBAAC,GAAG,IAAC,EAAE,EAAC,GAAG;gBACT;;oBACS,+BAAI,WAAW,CAAC,EAAE,CAAK;wBAC3B;gBACL,4BAAI,SAAS,EAAC,mBAAmB;oBAC/B;wBACE,8BAAM,EAAE,EAAC,SAAS,cAAe,CAC9B;oBACL,gCAAK,WAAW,CAAC,OAAO,CAAM;oBAC9B;wBACE,8BAAM,EAAE,EAAC,WAAW,iBAAkB,CACnC;oBACL;wBACE,oBAAC,UAAU,IAAC,KAAK,EAAE,WAAW,CAAC,SAAS,EAAE,IAAI,EAAC,MAAM,EAAC,MAAM,EAAE,qBAAqB,GAAI,CACpF;oBACL;wBACE,8BAAM,EAAE,EAAC,QAAQ,cAAe,CAC7B;oBACL,gCAAK,WAAW,CAAC,MAAM,CAAM;oBAC7B;wBACE,8BAAM,EAAE,EAAC,GAAG,QAAS,CAClB;oBACL,gCAAK,WAAW,CAAC,CAAC,CAAM,CACrB;gBACL,oBAAC,MAAM,IAAC,GAAG,EAAE,IAAI,EAAE,EAAE,EAAC,QAAQ,EAAC,OAAO,QAAC,KAAK,EAAC,MAAM;oBACjD,oBAAC,eAAe,IAAC,IAAI,EAAC,YAAY,GAAG;;oBAAC,8BAAM,SAAS,EAAC,oBAAoB,WAAY,CAC/E;;gBAET,oBAAC,MAAM,IAAC,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,WAAW,CAAC,EAAE,OAAO,EAAE,OAAO,QAAC,KAAK,EAAC,SAAS;oBAC7E,oBAAC,eAAe,IAAC,IAAI,EAAC,YAAY,GAAG;;oBAAC,8BAAM,SAAS,EAAC,oBAAoB,WAAY,CAC/E,CACL,CACF,CACP,CAAC;IACJ,CAAC;CACF;AAED,MAAM,eAAe,GAAG,CAAC,EAAE,KAAK,EAAc,EAAE,EAAE,CAAC,CAAC;IAClD,WAAW,EAAE,KAAK,CAAC,MAAM;CAC1B,CAAC,CAAC;AAEH,MAAM,kBAAkB,GAAG,EAAE,SAAS,EAAE,CAAC;AAKzC,eAAe,OAAO,CACpB,eAAe,EACf,kBAAkB,CACnB,CAAC,WAAW,CAAC,CAAC","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport { Button, Row, Col } from 'reactstrap';\nimport { ICrudGetAction, TextFormat } from 'react-jhipster';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { IRootState } from 'app/shared/reducers';\nimport { getEntity } from './diary.reducer';\nimport { IDiary } from 'app/shared/model/diary.model';\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\n\nexport interface IDiaryDetailProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\n\nexport class DiaryDetail extends React.Component<IDiaryDetailProps> {\n  componentDidMount() {\n    this.props.getEntity(this.props.match.params.id);\n  }\n\n  render() {\n    const { diaryEntity } = this.props;\n    return (\n      <Row>\n        <Col md=\"8\">\n          <h2>\n            Diary [<b>{diaryEntity.id}</b>]\n          </h2>\n          <dl className=\"jh-entity-details\">\n            <dt>\n              <span id=\"content\">Content</span>\n            </dt>\n            <dd>{diaryEntity.content}</dd>\n            <dt>\n              <span id=\"createdAt\">Created At</span>\n            </dt>\n            <dd>\n              <TextFormat value={diaryEntity.createdAt} type=\"date\" format={APP_LOCAL_DATE_FORMAT} />\n            </dd>\n            <dt>\n              <span id=\"userId\">User Id</span>\n            </dt>\n            <dd>{diaryEntity.userId}</dd>\n            <dt>\n              <span id=\"n\">N</span>\n            </dt>\n            <dd>{diaryEntity.n}</dd>\n          </dl>\n          <Button tag={Link} to=\"/diary\" replace color=\"info\">\n            <FontAwesomeIcon icon=\"arrow-left\" /> <span className=\"d-none d-md-inline\">Back</span>\n          </Button>\n          &nbsp;\n          <Button tag={Link} to={`/diary/${diaryEntity.id}/edit`} replace color=\"primary\">\n            <FontAwesomeIcon icon=\"pencil-alt\" /> <span className=\"d-none d-md-inline\">Edit</span>\n          </Button>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nconst mapStateToProps = ({ diary }: IRootState) => ({\n  diaryEntity: diary.entity\n});\n\nconst mapDispatchToProps = { getEntity };\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DiaryDetail);\n"]}]}