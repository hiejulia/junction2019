{"remainingRequest":"/Users/hien/Desktop/vue-argon-dashboard-master/node_modules/babel-loader/lib/index.js!/Users/hien/Desktop/vue-argon-dashboard-master/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/hien/Desktop/vue-argon-dashboard-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hien/Desktop/vue-argon-dashboard-master/src/lib/components/SpeechToText.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hien/Desktop/vue-argon-dashboard-master/src/lib/components/SpeechToText.vue","mtime":1573926209033},{"path":"/Users/hien/Desktop/vue-argon-dashboard-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hien/Desktop/vue-argon-dashboard-master/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hien/Desktop/vue-argon-dashboard-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hien/Desktop/vue-argon-dashboard-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport SpeechToText from \"../services/speech-to-text\";\n\nvar micImage = require(\"../../assets/mic.svg\");\n\nvar stopImage = require(\"../../assets/stop.svg\");\n/*\n// eslint-disable-next-line no-unused-vars\n// eslint-disable-next-line no-unused-vars\n*/\n\n\nexport default {\n  name: 'SpeechToText',\n  data: function data() {\n    return {\n      isSpeaking: false,\n      speech: '',\n      speechService: {},\n      micImage: micImage,\n      stopImage: stopImage\n    };\n  },\n  methods: {\n    onClick: function onClick() {\n      var _this = this;\n\n      this.isSpeaking = true;\n      this.speechService.speak().subscribe(function (result) {\n        _this.speech = result;\n\n        _this.$emit('speech', _this.speech);\n\n        _this.isSpeaking = false; // console.log('Result', result);\n      }, function (error) {\n        console.log('Error', error);\n        _this.isSpeaking = false;\n      }, function () {\n        _this.isSpeaking = false;\n      });\n      console.log('speechService started');\n    }\n  },\n  props: {\n    msg: String\n  },\n  created: function created() {\n    this.speechService = new SpeechToText();\n  }\n};",{"version":3,"sources":["SpeechToText.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAcA,OAAA,YAAA;;AAGA,IAAA,QAAA,GAAA,OAAA,wBAAA;;AACA,IAAA,SAAA,GAAA,OAAA,yBAAA;AACA;;;;;;AAIA,eAAA;AACA,EAAA,IAAA,EAAA,cADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,UAAA,EAAA,KADA;AAEA,MAAA,MAAA,EAAA,EAFA;AAGA,MAAA,aAAA,EAAA,EAHA;AAIA,MAAA,QAAA,EAAA,QAJA;AAKA,MAAA,SAAA,EAAA;AALA,KAAA;AAOA,GAVA;AAWA,EAAA,OAAA,EAAA;AACA,IAAA,OADA,qBACA;AAAA;;AACA,WAAA,UAAA,GAAA,IAAA;AACA,WAAA,aAAA,CAAA,KAAA,GAAA,SAAA,CACA,UAAA,MAAA,EAAA;AACA,QAAA,KAAA,CAAA,MAAA,GAAA,MAAA;;AACA,QAAA,KAAA,CAAA,KAAA,CAAA,QAAA,EAAA,KAAA,CAAA,MAAA;;AACA,QAAA,KAAA,CAAA,UAAA,GAAA,KAAA,CAHA,CAIA;AACA,OANA,EAOA,UAAA,KAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,OAAA,EAAA,KAAA;AACA,QAAA,KAAA,CAAA,UAAA,GAAA,KAAA;AACA,OAVA,EAWA,YAAA;AACA,QAAA,KAAA,CAAA,UAAA,GAAA,KAAA;AACA,OAbA;AAeA,MAAA,OAAA,CAAA,GAAA,CAAA,uBAAA;AACA;AAnBA,GAXA;AAgCA,EAAA,KAAA,EAAA;AACA,IAAA,GAAA,EAAA;AADA,GAhCA;AAmCA,EAAA,OAnCA,qBAmCA;AACA,SAAA,aAAA,GAAA,IAAA,YAAA,EAAA;AACA;AArCA,CAAA","sourcesContent":["<template>\n    <div>\n        <div class=\"speech-to-text__button-container\">\n            <div @click=\"onClick()\" :class=\"{ 'speech-to-text__button--speaking': isSpeaking }\"\n                    class=\"speech-to-text__button\">\n                    <img v-if=\"!isSpeaking\" :src=\"micImage\">\n                    <img v-if=\"isSpeaking\"\n                        class=\"speech-to-text__stop\" :src=\"stopImage\">\n                </div>\n            </div>\n    </div>\n</template>\n\n<script>\nimport SpeechToText from '../services/speech-to-text';\n\n\nconst micImage = require('../../assets/mic.svg');\nconst stopImage = require('../../assets/stop.svg');\n/*\n// eslint-disable-next-line no-unused-vars\n// eslint-disable-next-line no-unused-vars\n*/\nexport default {\n    name: 'SpeechToText',\n    data() {\n        return {\n            isSpeaking: false,\n            speech: '',\n            speechService: {},\n            micImage,\n            stopImage,\n        };\n    },\n    methods: {\n        onClick() {\n            this.isSpeaking = true;\n            this.speechService.speak().subscribe(\n                (result) => {\n                    this.speech = result;\n                    this.$emit('speech', this.speech);\n                    this.isSpeaking = false;\n                    // console.log('Result', result);\n                },\n                (error) => {\n                    console.log('Error', error);\n                    this.isSpeaking = false;\n                },\n                () => {\n                    this.isSpeaking = false;\n                }\n            );\n            console.log('speechService started');\n        }\n    },\n    props: {\n        msg: String\n    },\n    created() {\n        this.speechService = new SpeechToText();\n    }\n};\n</script>\n\n<style lang=\"sass\">\n@keyframes blind\n    0%\n        background-color: #dddddd\n        width: 45px\n        height: 45px\n    50%\n        background-color: white\n        width: 50px\n        height: 50px\n.speech-to-text\n    &__button-container\n        display: flex\n        justify-content: center\n        align-items: center\n        width: 50px\n        height: 50px\n    &__button\n        box-shadow: 1px 2px 3px\n        background-color: #FFFFFF\n        border-radius: 50px\n        width: 50px\n        height: 50px\n        display: flex\n        justify-content: center\n        align-items: center\n        cursor: pointer\n        &--speaking\n            animation-name: blind\n            animation-duration: 1.5s\n            animation-iteration-count: 1\n    &__stop\n        width: 16px\n</style>"],"sourceRoot":"src/lib/components"}]}